// Whitespace
WHITESPACE = _{ " " | "\t" | NEWLINE }

// Collections
Object       = { "{" ~ "}" | "{" ~ KeyValuePair ~ ("," ~ KeyValuePair)* ~ "}" }
KeyValuePair = { String ~ ":" ~ Value }
Array        = { "[" ~ "]" | "[" ~ Value ~ ("," ~ Value)* ~ "]" }

// String literals
String      = ${ "\"" ~ StringInner ~ "\"" }
StringInner = @{ Char* }

Char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

// Other literal values
Boolean =  { "true" | "false" }
Null    =  { "null" }
Number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

// Identifiers
Identifier     = @{ IdentFirstChar ~ IdentChar* }
IdentChar      = _{ Letter | '0'..'9' | "-" | "_" }
IdentFirstChar = _{ Letter | "_" }
Letter         = _{ 'a'..'z' | 'A'..'Z' }

// Expressions
Expr     =  { FuncSigs }
ExprTerm =  { Value | "(" ~ Expr ~ ")" | Expr }

// Funcs
FuncSigs  = _{ FuncSig ~ (FuncDelim? ~ FuncSig)* }
FuncSig   =  { Identifier ~ ArgsSig? }
FuncDelim = _{ "." }

// Args
ArgsSig       = _{ "(" ~ Args? ~ ")" }
Args          =  { Arg ~ ("," ~ Arg)* }
Arg           = _{ NamedArg | PositionalArg }
NamedArg      =  { Identifier ~ "=" ~ ExprTerm }
PositionalArg =  { ExprTerm }

// Values
Value = { Object | Array | String | Number | Boolean | Null }

Root = _{ SOI ~ FuncSigs ~ EOI }
