// Whitespace
WHITESPACE = _{ " " | "\t" | NEWLINE }

// String literals
StringLit   = _{ StringLitDq | StringLitSq }
StringLitDq = _{ "\"" ~ StringDq ~ "\"" }
StringLitSq = _{ "'" ~ StringSq ~ "'" }
StringDq    = @{ (("\\" ~ ("\"" | "\\")) | (!"\"" ~ ANY))* }
StringSq    = @{ (("\\" ~ ("'" | "\\")) | (!"'" ~ ANY))* }

// Other literals
BooleanLit =  { "true" | "false" }
NumericLit = @{ "-"? ~ Decimal+ ~ (("." ~ Decimal+ ~ (ExpMark ~ Decimal+)?) | (ExpMark ~ Decimal+))? }
ExpMark    =  { ("e" | "E") ~ ("+" | "-")? }
Decimal    =  { '0'..'9' }

// Identifiers
Identifier     = @{ IdentFirstChar ~ IdentChar* }
IdentChar      = _{ Letter | '0'..'9' | "-" | "_" }
IdentFirstChar = _{ Letter | "_" }
Letter         = _{ 'a'..'z' | 'A'..'Z' }

// Funcs
FuncSigs  = _{ FuncSig ~ (FuncDelim? ~ FuncSig)* }
FuncSig   =  { Identifier ~ ArgsSig? }
FuncDelim = _{ "." }

// Args
ArgsSig       = _{ "(" ~ Args? ~ ")" }
Args          =  { Arg ~ ("," ~ Arg)* }
Arg           = _{ NamedArg | PositionalArg }
ArgValue      = _{ StringLit | NumericLit | BooleanLit }
NamedArg      =  { Identifier ~ "=" ~ ArgValue }
PositionalArg =  { ArgValue }

Root = _{ SOI ~ FuncSigs ~ EOI }
